Ch6.객체지향 프로그래밍1

1. 객체지향언어
 - 코드의 재사용성이 높음
 - 코드의 관리가 용이(유지보수)
 - 중복된 코드 제거를 통한 신뢰성이 높은 프로그래밍 가능
 
 
 2. 클래스와 객체
  2.1 클래스와 객체의 정의와 용도
  - 클래스는 객체(실제로 존재하는 것 ex:사물, 개념, 논리...)를 생성하는데 사용
  - 객체는 서로 독립적 : 어느한 객체의 변화가 다른 객체에 영향을 주지 않음
  2.2 객체와 인스턴스
  - 객체는 인스턴스를 포함하는 일반적인 의미
  - 인스턴스화 : 객체를 만드는 과정
  - 인스턴스 : 클래스로부터 만들어진 객체
  - 클래스 > 인스턴스화 > 인스턴스(객체)
  2.3 객체의 구성요소 - 속성과 기능
  - 속성: 멤버변수 (ex:크기, 높이, 길이, 색상 ...)
  - 기능 : 메서드 (ex: 켜기, 끄기, 변경하기...)
  2.4 인스턴스의 생성과 사용
  - Tv t; //Tv클래스타입의 참조변수 t를 선언 
     ------ 메모리 공간 생성. 다만 인스턴스가 생성되지 않았으므로 아무것도 할 수 없는 상태
    t = new Tv(); //Tv인스턴스를 생성한후, 생성된 인스턴스의 주소를 t에저장
     ------ new에 의해 인스턴스가 메모리의 빈공간에 생성. 이때 멤버변수는 각 자료형에 해당하는 값으로 초기화 
             -> 대입연산자에 의해 객체의 주소값이 t에 저장
  - 인스턴스는 참조변수를 통해서만 다룰수 있고, 참조변수의 타입은 인스턴스 타입과 일치해야함
  - 참조변수에는 하나의값(주소)만 저장. 따라서 둘이상의 참조변수가 하나의 인스턴스를 가르키는 것은 가능 / 하나의 참조변수가 여러개의 인스턴스를 가르키는 것은 불가능
  2.5 객체배열
  2.6 클래스의 또 다른 정의
  
  
  JVM 동작원리 참고 블로그
 https://blog.naver.com/shb1833/221742451974